<%@ page language="java" contentType="text/html; charset=UTF-8"    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!DOCTYPE html>
<html>
<head>
    <title>Admin | View Nodes</title>
    <link rel="stylesheet" type="text/css" href="/stlb/css/common.css"/>
    <link rel="stylesheet" type="text/css" href="/stlb/bower_components/normalize-css/normalize.css"/>
    <link rel="stylesheet" type="text/css" href="/stlb/bower_components/semantic/dist/semantic.css"/>
</head>
<body>
<main class="ui container">
    <div class="ui stackable inverted container menu">
        <a href="/stlb" class="item">Admin</a>
        <a href="/stlb/viewNodes" class="item">View Nodes</a>
        <a href="/stlb/config" class="item">Configurations</a>
        <a href="/" class="item">Site</a>
    </div>
    <div class="ui large breadcrumb">
        <a href="/stlb">Admin</a>
        <i class="right chevron icon divider"></i>
        <a href="/stlb/viewNodes">View Nodes</a>
        <i class="right chevron icon divider"></i>

        <div class="active section">Node Info - ${node.nodeId}</div>
    </div>
    <section id="content" class="ui raised segment">
    <input type="hidden" value="${node.nodeId}" id="nodeId">
        <c:choose>
            <c:when test="${node.available}">
                <c:set var="labelClass" value="green" scope="request"/>
            </c:when>
            <c:otherwise>
                <c:set var="labelClass" value="red" scope="request"/>
            </c:otherwise>
        </c:choose>
        <a href="${node.url}" class="ui ${labelClass} ribbon label">
            ${node.name}
        </a>
        <div class="ui top attached tabular menu">
            <a class="item active" data-tab="first">Info</a>
            <a class="item" data-tab="second">Loading</a>
            <a class="item" data-tab="third">CPU monitor</a>
            <a class="item" data-tab="forth">Memory monitor</a>
            <a class="item" data-tab="fifth">Process monitor</a>
            <a class="item" data-tab="sixth">Mock</a>
        </div>
        <div class="ui bottom attached tab segment active" data-tab="first" id="first-tab">

        <table class="ui striped right aligned table">
            <thead>
            <th class="left aligned">Name</th>
            <th class="left aligned">Value</th>
            </thead>
            <tbody>
            <tr>
                <td class="left aligned">URL</td>
                <td class="left aligned"> ${node.url}</td>
            </tr>
            <tr>
                <td class="left aligned">Count of active connections</td>
                <td class="left aligned">${node.connectionsCount}</td>
            </tr>
            <tr>
                <td class="left aligned">Last availability status</td>
                <td class="left aligned">
                    <c:choose>
                        <c:when test="${not empty node.lastAvailible}">
                            ${node.lastAvailible}
                        </c:when>
                        <c:otherwise>
                            Never
                        </c:otherwise>
                    </c:choose>
                </td>
            </tr>
            <tr>
                <td class="left aligned">Balancer URI</td>
                <td class="left aligned">${node.balancerURI}</td>
            </tr>
            <c:if test="${node.available}">
            <tr>
                <td class="left aligned">Info connection</td>
                <td class="left aligned">
                    <c:choose>
                        <c:when test="${node.infoConnection}">
                            <i class="circular plug icon inverted green"></i>
                        </c:when>
                        <c:otherwise>
                            <i class="circular plug icon inverted red"></i>

                            <button class="ui icon button basic" id="reconnect">
                                <i class="refresh icon"></i>
                            </button>
                            <div class="ui active small inline loader hidden" id="reconnect-loading-spinner"></div>
                        </c:otherwise>
                    </c:choose>

                </td>
            </tr></c:if>
            <tr>
                <td class="left aligned">Report interval</td>
                <td class="left aligned">
                    <c:choose>
                        <c:when test="${node.interval > 0}">
                            <div class="ui small action input">
                                <form action="/stlb/setInterval-${node.nodeId}" method="post">
                                    <input id="url-name" name="interval" value="${node.interval}" type="number"/>
                                    <button class="teal ui button">Set</button>
                                </form>
                            </div>
                        </c:when>
                        <c:otherwise>
                            Interval is Unknown
                        </c:otherwise>
                    </c:choose>

                </td>
            </tr>
            <tr>
                <td class="left aligned">Activity point </td>
                <td class="left aligned">
                  ${node.currentNodeActivityPoint} / 100
                </td>
            </tr>
           <tr>
                <td class="left aligned">Activity point </td>
                <td class="left aligned">
                  ${node.maxNodeActivityPoint}
                </td>
            </tr>
            <tr>
                <td class="left aligned">Critical level </td>
                <td class="left aligned">
                    <div class="ui small action input">
                        <form action="/stlb/setCriticalLevel-${node.nodeId}" method="post">
                            <input id="critical-level" name="criticalLevel" value="${node.criticalLevel}" type="number"/>
                            <button class="teal ui button">Set</button>
                        </form>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="left aligned">Is in critical state </td>
                <td class="left aligned">
                    ${node.inCriticalState}
                </td>
            </tr>
            <tr>
                <td class="left aligned">Use mock </td>
                <td class="left aligned">
                    <form action="/stlb/switchNodeMockStatus-${node.nodeId}" method="post" class="content">
                        <c:choose>
                            <c:when test="${node.mockUsed}">
                                <button type="submit" class="positive ui button" name="set">
                                    enabled
                                </button>
                            </c:when>
                            <c:otherwise>
                                <button type="submit" class="negative ui button" name="set">
                                    disabled
                                </button>
                            </c:otherwise>
                        </c:choose>
                    </form>
                </td>
            </tr>
            <tr>
                <td class="left aligned">Received Bites</td>
                <td class="left aligned">
                    <c:if test="${node.receivedBites < 1024}">
                        ${node.receivedBites} b
                    </c:if>
                    <c:if test="${node.receivedBites >= 1024 && node.receivedBites < (1024 * 1024)}">
                        ${node.receivedBites / 1024} Kb
                    </c:if>
                    <c:if test="${node.receivedBites >= (1024 * 1024) && node.receivedBites < (1024 * 1024 * 1024)}">
                        ${node.receivedBites / (1024 * 1024)} Mb
                    </c:if>
                    <c:if test="${node.receivedBites > (1024 * 1024 * 1024)}">
                        ${node.receivedBites / (1024 * 1024 * 1024}} Gb
                    </c:if>
                </td>
            </tr>
            <tr>
                <td class="left aligned">current Average Balancer Delay</td>
                <td class="left aligned">
                    ${node.currentAverageBalancerDelay} milli seconds
                </td>
            </tr>

            <tr>
                <td class="left aligned">Most active session </td>
                <td class="left aligned">
                    <c:if test="${not empty node.currentMostActiveSession}">
                        ${node.currentMostActiveSession.activity} / 10 000
                    </c:if>
                </td>
            </tr>
            </tbody>
        </table>
        <c:if test="${node.connectionsCount > 0}">
            <div class="ui styled fluid accordion">
                <c:forEach items="${node.strongConnections}" var="connection">
                    <div class="title">
                        <i class="dropdown icon"></i>
                        ${connection.jSessionId}
                    </div>
                    <div class="content">
                        <p class="transition hidden">jSessionId - <span
                                class="right aligned"> ${connection.jSessionId} </span></p>

                        <p class="transition hidden">nodeJSessionId - ${connection.nodeJSessionId}</p>

                        <p class="transition hidden">expired - ${connection.expired}</p>

                        <p class="transition hidden">lastActivity - ${connection.lastActivity}</p>

                        <p class="transition hidden">activity points - ${connection.activity} / 10 000</p>
                    </div>
                </c:forEach>
            </div>
        </c:if>
        </div>
        <div class="ui bottom attached tab segment" data-tab="second" id="second-tab">

        </div>
        <div class="ui bottom attached tab segment" data-tab="third" id="third-tab">

        </div>
        <div class="ui bottom attached tab segment" data-tab="fifth" id="fifth-tab">

        </div>
        <div class="ui bottom attached tab segment" data-tab="forth" id="forth-tab">

        </div>
        <div class="ui bottom attached tab segment" data-tab="sixth" id="sixth-tab">

        </div>
    </section>
</main>
</body>
<script src="/stlb/bower_components/jquery/dist/jquery.min.js"></script>
<script src="/stlb/bower_components/semantic/dist/semantic.js"></script>
<script src="/stlb/js/main.js"></script>
<script>


                        $( "#reconnect" ).click(function() {
                        $( "#reconnect-loading-spinner" ).removeClass("hidden");

                        });

                    </script>
</html>